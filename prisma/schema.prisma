// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pedido {
  idPedido      String            @id @default(uuid())
  opcoesEntrega String
  valor         Decimal           @db.Decimal(10, 2)
  idCliente     String            @unique
  cliente       Cliente           @relation(fields: [idCliente], references: [idCliente])
  idCarrinho    String            @unique
  carrinho      CarrinhoDeCompras @relation(fields: [idCarrinho], references: [idCarrinhoDeCompras])

  @@map("pedidos")
}

model Artista {
  idArtista            String @id @default(uuid())
  cnpj                 String @unique
  categoriaArte        String
  politicaEntregaFrete String
  descricao            String

  @@map("artistas")
}

model Produto {
  idProduto        String  @id @default(uuid())
  nome             String  @db.VarChar(50)
  categoria        String  @db.VarChar(50)
  descricao        String  @db.VarChar(200)
  dimensao         String  @db.VarChar(25)
  preco            Decimal @db.Decimal(10, 2)
  artistaIdArtista String?

  @@map("produtos")
}

model Cliente {
  idCliente         String             @id @default(uuid())
  nome              String
  email             String             @unique
  cpf               String             @unique @db.VarChar(11)
  telefone          String             @db.VarChar(11)
  senha             String
  endereco          String
  carrinhoDeCompras CarrinhoDeCompras?
  Pedido            Pedido?
  cartoes           Cartao[]           

  @@map("clientes")
}

model Cartao {
  idCartao   String  @id @default(uuid())
  numero     String  @unique
  validade   String
  cvv        String
 nomeTitular String
  clienteId  String
  cliente    Cliente @relation(fields: [clienteId], references: [idCliente])

  @@map("cartoes")
}


model CarrinhoDeCompras {
  idCarrinhoDeCompras String  @id @default(uuid())
  valor               Decimal @db.Decimal(10, 2)
  idCliente           String  @unique
  cliente             Cliente @relation(fields: [idCliente], references: [idCliente])
  Pedido              Pedido?

  @@map("carrinhos_de_compras")
}


